@page "/todo"

@inject ITodoItemService todoItemService

<h3>Todo @todoItems.Count(todo => !todo.IsComplete)</h3>

<input placeholder="Something todo" @bind="newTodo" />
<button @onclick="AddTodoItem"> Add todo</button>
<br><br>

<div>
    <ul>
@foreach (var todoItem in todoItems)
    {
        <li>
            <input @bind="todoItem.Name" />
            <input type="checkbox" @onchange="( async () => await ToggleTodoItem(todoItem) )" checked="@todoItem.IsComplete" />
            <button @onclick="( async () => await DeleteTodoItem(todoItem) )"> Delete </button>
        </li>
    }
    </ul>
</div>


@code {

    private List<TodoItem> todoItems = new List<TodoItem>();

    private string? newTodo;

    private bool shouldRender;
    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        var itemList = (await todoItemService.GetTodoItems()).ToList();

        if (itemList == null)
            todoItems.Clear();
        else
            todoItems = itemList;

        shouldRender = true;
    }

    private async Task AddTodoItem()
    {
        TodoItem newTodoItem = new TodoItem();
        newTodoItem.Name = newTodo;
        newTodoItem.IsComplete = false;

        var itemList = (await todoItemService.AddTodoItem(newTodoItem)).ToList();

        if (itemList == null)
            todoItems.Clear();
        else
            todoItems = itemList;

    }

    private async Task DeleteTodoItem(TodoItem todoItem)
    {
        TodoItem newTodoItem = new TodoItem();
        newTodoItem.Name = newTodo;
        newTodoItem.IsComplete = false;

        var itemList = (await todoItemService.DeleteTodoItem(todoItem)).ToList();

        if (itemList == null)
            todoItems.Clear();
        else
            todoItems = itemList;
    }

        private async Task ToggleTodoItem(TodoItem todoItem)
    {
        TodoItem newTodoItem = new TodoItem();
        newTodoItem.Name = newTodo;
        newTodoItem.IsComplete = false;

        var itemList = (await todoItemService.SetTodoItem(todoItem)).ToList();

        if (itemList == null)
            todoItems.Clear();
        else
            todoItems = itemList;

    }
    
}